/* 2022-08-23 - TODOS LOS SISTEMAS EN VPS25 - SALAS DE CONFERENCIA  */
/* PARA ACTIVAR LA VIDEOCONFERENCIA DEBE PASAR A TRUE EN /OPT/LAMP/HTDOCS/XSISTEMA/CONFIG.PHP */
SET TERM # ;

CREATE OR ALTER PROCEDURE S_CREA_TABLA(
  NOMBRETABLA VARCHAR(60) CHARACTER SET ISO8859_1)
AS
DECLARE VARIABLE QUERY VARCHAR(1000);
DECLARE VARIABLE XRESULT VARCHAR(60);
DECLARE VARIABLE NOMBRETRIGGER VARCHAR(60);
DECLARE VARIABLE NOMBREGENERADOR VARCHAR(60);
DECLARE VARIABLE INDICE VARCHAR(60);
DECLARE VARIABLE T_FECHA VARCHAR(100);
DECLARE VARIABLE XNOMBRETABLA VARCHAR(60);
BEGIN
IF(NOT EXISTS(

                   SELECT RDB$RELATION_NAME
                   FROM RDB$RELATIONS
                   WHERE RDB$RELATION_NAME = :NOMBRETABLA)
        )
     THEN
     BEGIN
          QUERY ='SELECT LEFT( TRUNC( RAND() * 1000000  ) ,6 ) FROM RDB$DATABASE';
          EXECUTE STATEMENT :QUERY INTO XNOMBRETABLA;

          SELECT RDB$RELATION_NAME
          FROM RDB$RELATIONS
          WHERE RDB$RELATION_NAME = :NOMBRETABLA
          INTO :XRESULT;
          IF (XRESULT IS NULL) THEN
          BEGIN
               INDICE = 'ID_' || :NOMBRETABLA;

               QUERY = 'CREATE TABLE ' || UPPER(:NOMBRETABLA) || '('||:INDICE || '  VARCHAR(16) NOT NULL,';
               QUERY = QUERY || ' ID_M_USUARIOS VARCHAR(16), ID_M_AREAS VARCHAR(16), FECHA TIMESTAMP DEFAULT ''NOW'', FECHA_REGISTRO TIMESTAMP DEFAULT ''NOW'',ACCION VARCHAR(1) DEFAULT ''I'', UNICO VARCHAR(32), BARCODE VARCHAR(20),ID INTEGER, ID_EMPRESA VARCHAR(10),CAMPO1 VARCHAR(60),CAMPO2 VARCHAR(60),CAMPO3 VARCHAR(60),CAMPO4 VARCHAR(60),CAMPO5 VARCHAR(60), ';
               IF(SUBSTRING (:NOMBRETABLA FROM 1 FOR 2)='M_') THEN
               BEGIN
                    QUERY = QUERY||' ESTATUS VARCHAR(20) DEFAULT ''ACT'',';
               END
               QUERY = QUERY||'CONSTRAINT PK_' || :NOMBRETABLA || ' PRIMARY KEY (' || :INDICE ||'), CONSTRAINT UK_ID_' || :NOMBRETABLA || ' UNIQUE (ID,ID_EMPRESA))';
               EXECUTE STATEMENT QUERY;
               NOMBREGENERADOR= 'G_'||:NOMBRETABLA||'_ID';
               XRESULT=NULL;

               SELECT RDB$GENERATOR_NAME
               FROM RDB$GENERATORS
               WHERE RDB$GENERATOR_NAME = :NOMBREGENERADOR
               INTO :XRESULT;

               IF (XRESULT IS NULL) THEN
               BEGIN
                    QUERY= 'CREATE GENERATOR G_'||:NOMBRETABLA||'_ID';
                    EXECUTE STATEMENT QUERY;
               END

               NOMBRETRIGGER= SUBSTRING('T_ID_'||:XNOMBRETABLA FROM 1 FOR 20);
               --T_FECHA = SUBSTRING('T_F_'||:NOMBRETABLA FROM 1 FOR 20); *** EDSON/BENJAMIN 2022-05-09 PARA SISTEMA SUITE_
               T_FECHA = SUBSTRING('T_F_'||:XNOMBRETABLA FROM 1 FOR 20);
               XRESULT=NULL;

               SELECT RDB$TRIGGER_NAME
               FROM RDB$TRIGGERS
               WHERE RDB$TRIGGER_NAME = :NOMBRETRIGGER
               INTO :XRESULT;

               IF (XRESULT IS NULL) THEN
               BEGIN
                    QUERY = 'CREATE TRIGGER '||:NOMBRETRIGGER||' FOR '||:NOMBRETABLA||
                    ' ACTIVE BEFORE INSERT POSITION 0 AS';
                    QUERY = QUERY||' DECLARE VARIABLE CODCONFIG VARCHAR(6); declare variable GENID INTEGER; BEGIN GENID=GEN_ID('
                            ||:NOMBREGENERADOR||', 1); NEW.ID=:GENID; IF (NEW.'||:INDICE ||
                            ' IS NULL) THEN  BEGIN  SELECT CODIGO FROM CONFIGURACION INTO :CODCONFIG;   NEW.'
                            ||:INDICE|| '= :CODCONFIG||:GENID;  NEW.ID_EMPRESA=:CODCONFIG; END END';
                    EXECUTE STATEMENT QUERY;
               END
          END

          XRESULT=NULL;
          SELECT RDB$TRIGGER_NAME
          FROM RDB$TRIGGERS
          WHERE RDB$TRIGGER_NAME = :T_FECHA
          INTO :XRESULT;

          IF (XRESULT IS NULL) THEN
          BEGIN
               QUERY = 'CREATE TRIGGER '||T_FECHA||' FOR '||:NOMBRETABLA|| '
                       ACTIVE BEFORE UPDATE
                       POSITION 0
                       AS
                       BEGIN
                            IF(NEW.UNICO IS DISTINCT FROM OLD.UNICO) THEN
                            BEGIN
                                 NEW.FECHA=''NOW'';
                            END
                       END';
               EXECUTE STATEMENT QUERY;
          END
          --QUERY = 'CREATE INDEX IDX_'||SUBSTRING(NOMBRETABLA FROM 1 FOR 15)||'_UNICO ON '||:NOMBRETABLA||'(UNICO)'; *** EDSON/BENJAMIN 2022-05-09 PARA SISTEMA SUITE_
          QUERY = 'CREATE INDEX IDX_'||SUBSTRING(:XNOMBRETABLA FROM 1 FOR 15)||
                  '_UNICO ON '||:NOMBRETABLA||'(UNICO)';
          EXECUTE STATEMENT :QUERY;
          --QUERY = 'CREATE INDEX IDX_'||:NOMBRETABLA||'_ID ON '||:NOMBRETABLA||'(ID)'; *** EDSON/BENJAMIN 2022-05-09 PARA SISTEMA SUITE_
          QUERY = 'CREATE INDEX IDX_'||:XNOMBRETABLA||'_ID ON '||:NOMBRETABLA||
          '(ID)';
          EXECUTE STATEMENT :QUERY;

          --QUERY = 'CREATE DESC INDEX IDX_'||SUBSTRING(NOMBRETABLA FROM 1 FOR 15)||'_ID_DESC ON '||:NOMBRETABLA||'(ID)'; *** EDSON/BENJAMIN 2022-05-09 PARA SISTEMA SUITE_
          QUERY = 'CREATE DESC INDEX IDX_'||SUBSTRING(:XNOMBRETABLA FROM 1 FOR 15
          )||'_ID_DESC ON '||:NOMBRETABLA||'(ID)';
          EXECUTE STATEMENT :QUERY;
     END
END
#

EXECUTE PROCEDURE S_CREA_TABLA('M_SALAS_CONFERENCIA') #
COMMIT WORK #

ALTER TABLE M_SALAS_CONFERENCIA ADD NOMBRES VARCHAR(60) #
ALTER TABLE M_SALAS_CONFERENCIA ADD COMENTARIOS VARCHAR(300) #

CREATE OR ALTER VIEW V_M_SALAS_CONFERENCIA
AS
SELECT M_SALAS_CONFERENCIA.FECHA AS FECHA,
       M_SALAS_CONFERENCIA.FECHA_REGISTRO AS FECHA_REGISTRO,
       M_SALAS_CONFERENCIA.ID AS ID,
       M_SALAS_CONFERENCIA.ID_M_SALAS_CONFERENCIA AS ID_M_SALAS_CONFERENCIA,
       M_SALAS_CONFERENCIA.ID_M_USUARIOS AS ID_M_USUARIOS,
       M_SALAS_CONFERENCIA.NOMBRES AS NOMBRES,
       M_SALAS_CONFERENCIA.COMENTARIOS AS COMENTARIOS,
       M_SALAS_CONFERENCIA.ESTATUS AS ESTATUS,
       M_TERMINOS.NOMBRES AS NOMBRE_ESTATUS,
       M_USUARIOS.NOMBRE_COMPLETO AS NOMBRE_USUARIO
FROM M_SALAS_CONFERENCIA
LEFT JOIN M_TERMINOS ON (M_TERMINOS.CODIGO1      = M_SALAS_CONFERENCIA.ESTATUS)
LEFT JOIN M_USUARIOS ON (M_USUARIOS.ID_M_USUARIO = M_SALAS_CONFERENCIA.ID_M_USUARIOS)
#

INSERT INTO M_SALAS_CONFERENCIA (ID_M_SALAS_CONFERENCIA, ID, ID_EMPRESA, NOMBRES, COMENTARIOS)
VALUES
  ('0011', 1, '001', 'SISTEMAS', NULL)#

INSERT INTO M_SALAS_CONFERENCIA (ID_M_SALAS_CONFERENCIA, ID, ID_EMPRESA, NOMBRES, COMENTARIOS)
VALUES
  ('0012', 2, '001', 'COMERCIAL', 'SALA COMERCIAL')#

INSERT INTO M_SALAS_CONFERENCIA (ID_M_SALAS_CONFERENCIA, ID, ID_EMPRESA, NOMBRES, COMENTARIOS)
VALUES
  ('0013', 3, '001', 'GERENCIA', NULL)#

INSERT INTO M_SALAS_CONFERENCIA (ID_M_SALAS_CONFERENCIA, ID, ID_EMPRESA, NOMBRES, COMENTARIOS)
VALUES
  ('0014', 4, '001', 'MANTENIMIENTO', '')#

INSERT INTO M_SALAS_CONFERENCIA (ID_M_SALAS_CONFERENCIA, ID, ID_EMPRESA, NOMBRES, COMENTARIOS)
VALUES
  ('0016', 6, '001', 'DESARROLLO', '')#

INSERT INTO M_SALAS_CONFERENCIA (ID_M_SALAS_CONFERENCIA, ID, ID_EMPRESA, NOMBRES, COMENTARIOS)
VALUES
  ('0017', 7, '001', 'INNOVATION', '')#
  



