module.exports=function CreateAmtRemoteIder(){var B={};B.protocol=3;B.bytesToAmt=0;B.bytesFromAmt=0;B.rx_timeout=30000;B.tx_timeout=0;B.heartbeat=20000;B.version=1;B.acc=null;B.inSequence=0;B.outSequence=0;B.iderinfo=null;B.enabled=false;B.iderStart=0;B.floppy=null;B.cdrom=null;B.floppyReady=false;B.cdromReady=false;B.sectorStats=null;B.debug=false;var z=new Buffer([0,38,49,128,0,0,0,0,5,30,16,169,8,32,2,0,3,195,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,2,208,0,0]);var s=new Buffer([0,92,36,128,0,0,0,0,1,10,0,1,0,0,0,0,2,0,0,0,3,22,0,160,0,0,0,0,0,18,2,0,0,0,0,0,0,0,160,0,0,0,5,30,16,169,8,32,2,0,3,195,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,2,208,0,0,8,10,0,0,0,0,0,0,0,0,0,0,11,6,0,0,0,17,36,49]);var x=new Buffer([0,38,36,128,0,0,0,0,5,30,4,176,2,18,2,0,0,80,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,2,208,0,0]);var r=new Buffer([0,92,36,128,0,0,0,0,1,10,0,1,0,0,0,0,2,0,0,0,3,22,0,160,0,0,0,0,0,18,2,0,0,0,0,0,0,0,160,0,0,0,5,30,4,176,2,18,2,0,0,80,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,2,208,0,0,8,10,0,0,0,0,0,0,0,0,0,0,11,6,0,0,0,17,36,49]);var t=new Buffer([0,18,1,128,0,0,0,0,26,10,0,0,0,0,0,0,0,0,0,0]);var u=new Buffer([0,18,1,128,0,0,0,0,29,10,0,0,0,0,0,0,0,0,0,0]);var v=new Buffer([0,32,1,128,0,0,0,0,42,24,0,0,0,0,32,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0]);var q=new Buffer([0,40,1,128,0,0,0,0,1,6,0,255,0,0,0,0,42,24,0,0,0,0,2,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0]);var i=new Buffer([0,0,0,40,0,0,0,8]);var j=new Buffer([0,0,3,4,0,8,1,0]);var h=new Buffer([0,1,3,4,0,0,0,2]);var m=new Buffer([0,2,3,4,0,0,0,0]);var l=new Buffer([0,3,3,4,41,0,0,2]);var k=new Buffer([0,16,1,8,0,0,8,0,0,1,0,0]);var o=new Buffer([0,30,3,0]);var n=new Buffer([1,0,3,0]);var p=new Buffer([1,5,3,0]);var y=new Buffer([0,18,36,128,0,0,0,0,1,10,0,1,0,0,0,0,2,0,0,0]);var A=new Buffer([0,18,49,128,0,0,0,0,1,10,0,1,0,0,0,0,2,0,0,0]);var w=new Buffer([0,14,1,128,0,0,0,0,1,6,0,255,0,0,0,0]);var C=new Buffer([0,32,14,1,1,1,1,32,255,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0]);var D=new Buffer([0,0,0,4,2,0,0,0]);B.xxStateChange=function(G){if(B.debug){console.log("IDER-StateChange",G)}if(G==0){B.Stop()}if(G==3){B.Start()}};B.Start=function(){if(B.debug){console.log("IDER-Start");console.log(B.floppy,B.cdrom)}B.bytesToAmt=0;B.bytesFromAmt=0;B.inSequence=0;B.outSequence=0;e=[];B.SendCommand(64,Buffer.concat([ShortToStrX(B.rx_timeout),ShortToStrX(B.tx_timeout),ShortToStrX(B.heartbeat),IntToStrX(B.version)]));if(B.sectorStats){B.sectorStats(0,0,B.floppy?(B.floppy.size>>9):0);B.sectorStats(0,1,B.cdrom?(B.cdrom.size>>11):0)}};B.Stop=function(){if(B.debug){console.log("IDER-Stop")}B.parent.Stop()};B.ProcessData=function(G){B.bytesFromAmt+=G.length;if(B.acc==null){B.acc=G}else{B.acc=Buffer.concat(B.acc,G)}if(B.debug){console.log("IDER-ProcessData",B.acc.length,B.acc.toString("hex"))}while(B.acc!=null){var H=B.ProcessDataEx();if(H==0){return}if(B.inSequence!=ReadIntX(B.acc,4)){if(B.debug){console.log("ERROR: Out of sequence",B.inSequence,ReadIntX(B.acc,4))}B.Stop();return}B.inSequence++;if(H==B.acc.length){B.acc=null}else{B.acc=B.acc.slice(H)}}};B.SendCommand=function(H,J,I,K){if(J==null){J=Buffer.alloc(0)}var G=((H>50)&&(I==true))?2:0;if(K){G+=1}var L=Buffer.concat([Buffer([H,0,0,G]),IntToStrX(B.outSequence++),J]);B.parent.xxSend(L);B.bytesToAmt+=L.length};B.SendCommandEndResponse=function(J,K,I,G,H){if(J){B.SendCommand(81,new Buffer([0,0,0,0,0,0,0,0,0,0,0,0,197,0,3,0,0,0,I,80,0,0,0]),true)}else{B.SendCommand(81,new Buffer([0,0,0,0,0,0,0,0,0,0,0,0,135,(K<<4),3,0,0,0,I,81,K,G,H]),true)}};B.SendDataToHost=function(I,G,H,J){var K=(J)?0:H.length;if(G==true){B.SendCommand(84,Buffer.concat([new Buffer([0,(H.length&255),(H.length>>8),0,J?180:181,0,2,0,(K&255),(K>>8),I,88,133,0,3,0,0,0,I,80,0,0,0,0,0,0]),H]),G,J)}else{B.SendCommand(84,Buffer.concat([new Buffer([0,(H.length&255),(H.length>>8),0,J?180:181,0,2,0,(K&255),(K>>8),I,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),H]),G,J)}};B.SendGetDataFromHost=function(H,G){B.SendCommand(82,new Buffer([0,(G&255),(G>>8),0,181,0,0,0,(G&255),(G>>8),H,88,0,0,0,0,0,0,0,0,0,0,0]),false)};B.SendDisableEnableFeatures=function(H,G){if(G==null){G=""}B.SendCommand(72,Buffer.concat([new Buffer([H]),G]))};B.ProcessDataEx=function(){if(B.acc.length<8){return 0}switch(B.acc[0]){case 65:if(B.acc.length<30){return 0}var K=B.acc[29];if(B.acc.length<(30+K)){return 0}B.iderinfo={};B.iderinfo.major=B.acc[8];B.iderinfo.minor=B.acc[9];B.iderinfo.fwmajor=B.acc[10];B.iderinfo.fwminor=B.acc[11];B.iderinfo.readbfr=ReadShortX(B.acc,16);B.iderinfo.writebfr=ReadShortX(B.acc,18);B.iderinfo.proto=B.acc[21];B.iderinfo.iana=ReadIntX(B.acc,25);if(B.debug){console.log(B.iderinfo)}if(B.iderinfo.proto!=0){if(B.debug){console.log("Unknown proto",B.iderinfo.proto)}B.Stop()}if(B.iderinfo.readbfr>8192){if(B.debug){console.log("Illegal read buffer size",B.iderinfo.readbfr)}B.Stop()}if(B.iderinfo.writebfr>8192){if(B.debug){console.log("Illegal write buffer size",B.iderinfo.writebfr)}B.Stop()}if(B.iderStart==0){B.SendDisableEnableFeatures(3,IntToStrX(1+8))}else{if(B.iderStart==1){B.SendDisableEnableFeatures(3,IntToStrX(1+16))}else{if(B.iderStart==2){B.SendDisableEnableFeatures(3,IntToStrX(1+24))}}}return 30+K;case 67:if(B.debug){console.log("CLOSE")}B.Stop();return 8;case 68:B.SendCommand(69);return 8;case 69:if(B.debug){console.log("PONG")}return 8;case 70:if(B.acc.length<9){return 0}var L=B.acc[8];if(d===null){B.SendCommand(71);if(B.debug){console.log("RESETOCCURED1",L)}}else{f=true;if(B.debug){console.log("RESETOCCURED2",L)}}return 9;case 73:if(B.acc.length<13){return 0}var M=B.acc[8];var N=ReadIntX(B.acc,9);if(B.debug){console.log("STATUS_DATA",M,N)}switch(M){case 1:if(N&1){if(B.iderStart==0){B.SendDisableEnableFeatures(3,IntToStrX(1+8))}else{if(B.iderStart==1){B.SendDisableEnableFeatures(3,IntToStrX(1+16))}else{if(B.iderStart==2){B.SendDisableEnableFeatures(3,IntToStrX(1+24))}}}}break;case 2:B.enabled=(N&2)?true:false;if(B.debug){console.log("IDER Status: "+B.enabled)}break;case 3:if(N!=1){if(B.debug){console.log("Register toggle failure")}}break}return 13;case 74:if(B.acc.length<11){return 0}if(B.debug){console.log("IDER: ABORT",B.acc[8])}return 11;case 75:return 8;case 80:if(B.acc.length<28){return 0}var H=(B.acc[14]&16)?176:160;var I=B.acc[14];var G=B.acc.slice(16,28);var J=B.acc[9];if(B.debug){console.log("SCSI_CMD",H,G.toString("hex"),J,I)}g(H,G,J,I);return 28;case 83:if(B.acc.length<14){return 0}var K=ReadShortX(B.acc,9);if(B.acc.length<(14+K)){return 0}if(B.debug){console.log("SCSI_WRITE, len = "+(14+K))}B.SendCommand(81,new Buffer([0,0,0,0,0,0,0,0,0,0,0,0,135,112,3,0,0,0,160,81,7,39,0]),true);return 14+K;default:if(B.debug){console.log("Unknown IDER command",B.acc[0])}B.Stop();break}return 0};function g(K,J,M,L){var P;var Q;switch(J[0]){case 0:if(B.debug){console.log("SCSI: TEST_UNIT_READY",K)}switch(K){case 160:if(B.floppy==null){B.SendCommandEndResponse(1,2,K,58,0);return -1}if(B.floppyReady==false){B.floppyReady=true;B.SendCommandEndResponse(1,6,K,40,0);return -1}break;case 176:if(B.cdrom==null){B.SendCommandEndResponse(1,2,K,58,0);return -1}if(B.cdromReady==false){B.cdromReady=true;B.SendCommandEndResponse(1,6,K,40,0);return -1}break;default:if(B.debug){console.log("SCSI Internal error 3",K)}return -1}B.SendCommandEndResponse(1,0,K,0,0);break;case 8:P=((J[1]&31)<<16)+(J[2]<<8)+J[3];Q=J[4];if(Q==0){Q=256}if(B.debug){console.log("SCSI: READ_6",K,P,Q)}E(K,P,Q,M);break;case 10:P=((J[1]&31)<<16)+(J[2]<<8)+J[3];Q=J[4];if(Q==0){Q=256}if(B.debug){console.log("SCSI: WRITE_6",K,P,Q)}B.SendCommandEndResponse(1,2,K,58,0);return -1;case 26:if(B.debug){console.log("SCSI: MODE_SENSE_6",K)}if((J[2]==63)&&(J[3]==0)){var G=0,H=0;switch(K){case 160:if(B.floppy==null){B.SendCommandEndResponse(1,2,K,58,0);return -1}G=0;H=128;break;case 176:if(B.cdrom==null){B.SendCommandEndResponse(1,2,K,58,0);return -1}G=5;H=128;break;default:if(B.debug){console.log("SCSI Internal error 6",K)}return -1}B.SendDataToHost(K,true,new Buffer([0,G,H,0]),M&1);return}B.SendCommandEndResponse(1,5,K,36,0);break;case 27:B.SendCommandEndResponse(1,0,K);break;case 30:if(B.debug){console.log("SCSI: ALLOW_MEDIUM_REMOVAL",K)}if((K==160)&&(B.floppy==null)){B.SendCommandEndResponse(1,2,K,58,0);return -1}if((K==176)&&(B.cdrom==null)){B.SendCommandEndResponse(1,2,K,58,0);return -1}B.SendCommandEndResponse(1,0,K,0,0);break;case 35:if(B.debug){console.log("SCSI: READ_FORMAT_CAPACITIES",K)}var I=ReadShort(J,7);var S=0,X;var R=I/8;switch(K){case 160:if((B.floppy==null)||(B.floppy.size==0)){B.SendCommandEndResponse(0,5,K,36,0);return -1}X=(B.floppy.size>>9)-1;break;case 176:if((B.cdrom==null)||(B.cdrom.size==0)){B.SendCommandEndResponse(0,5,K,36,0);return -1}X=(B.cdrom.size>>11)-1;break;default:if(B.debug){console.log("SCSI Internal error 4",K)}return -1}B.SendDataToHost(K,true,Buffer.concat([IntToStr(8),new Buffer([0,0,11,64,2,0,2,0])]),M&1);break;case 37:if(B.debug){console.log("SCSI: READ_CAPACITY",K)}var Q=0;switch(K){case 160:if((B.floppy==null)||(B.floppy.size==0)){B.SendCommandEndResponse(0,2,K,58,0);return -1}if(B.floppy!=null){Q=(B.floppy.size>>9)-1}if(B.debug){console.log("DEV_FLOPPY",Q)}break;case 176:if((B.cdrom==null)||(B.cdrom.size==0)){B.SendCommandEndResponse(0,2,K,58,0);return -1}if(B.cdrom!=null){Q=(B.cdrom.size>>11)-1}if(B.debug){console.log("DEV_CDDVD",Q)}break;default:if(B.debug){console.log("SCSI Internal error 4",K)}return -1}if(B.debug){console.log("SCSI: READ_CAPACITY2",K,L)}B.SendDataToHost(L,true,Buffer.concat([IntToStr(Q),new Buffer([0,0,((K==176)?8:2),0])]),M&1);break;case 40:P=ReadInt(J,2);Q=ReadShort(J,7);if(B.debug){console.log("SCSI: READ_10",K,P,Q)}E(K,P,Q,M);break;case 42:case 46:P=ReadInt(J,2);Q=ReadShort(J,7);if(B.debug){console.log("SCSI: WRITE_10",K,P,Q)}B.SendGetDataFromHost(K,512*Q);break;case 67:var I=ReadShort(J,7);var T=J[1]&2;var O=J[2]&7;if(O==0){O=J[9]>>6}if(B.debug){console.log("SCSI: READ_TOC, dev="+K+", buflen="+I+", msf="+T+", format="+O)}switch(K){case 160:B.SendCommandEndResponse(1,5,K,32,0);return -1;case 176:break;default:if(B.debug){console.log("SCSI Internal error 9",K)}return -1}if(O==1){B.SendDataToHost(K,true,new Buffer([0,10,1,1,0,20,1,0,0,0,0,0]),M&1)}else{if(O==0){if(T){B.SendDataToHost(K,true,new Buffer([0,18,1,1,0,20,1,0,0,0,2,0,0,20,170,0,0,0,52,19]),M&1)}else{B.SendDataToHost(K,true,new Buffer([0,18,1,1,0,20,1,0,0,0,0,0,0,20,170,0,0,0,0,0]),M&1)}}}break;case 70:var Y=(J[1]!=2);var N=ReadShort(J,2);var I=ReadShort(J,7);if(B.debug){console.log("SCSI: GET_CONFIGURATION",K,Y,N,I)}if(I==0){B.SendDataToHost(K,true,Buffer.concat([IntToStr(60),IntToStr(8)]),M&1);return -1}var V=null;if(N==0){V=j}if((N==1)||(Y&&(N<1))){V=h}if((N==2)||(Y&&(N<2))){V=m}if((N==3)||(Y&&(N<3))){V=l}if((N==16)||(Y&&(N<16))){V=k}if((N==30)||(Y&&(N<30))){V=o}if((N==256)||(Y&&(N<256))){V=n}if((N==261)||(Y&&(N<261))){V=p}if(V==null){V=Buffer.concat([IntToStr(8),IntToStr(4)])}else{V=Buffer.concat([IntToStr(8),IntToStr(V.length+4),V])}if(V.length>I){V=V.slice(0,I)}B.SendDataToHost(K,true,V,M&1);return -1;case 74:if(B.debug){console.log("SCSI: GET_EVENT_STATUS_NOTIFICATION",K,J[1],J[4],J[9])}if((J[1]!=1)&&(J[4]!=16)){if(B.debug){console.log("SCSI ERROR")}B.SendCommandEndResponse(1,5,K,38,1);break}var U=0;if((K==160)&&(B.floppy!=null)){U=2}else{if((K==176)&&(B.cdrom!=null)){U=2}}B.SendDataToHost(K,true,new Buffer([0,U,128,0]),M&1);break;case 76:B.SendCommand(81,Buffer.concat([IntToStrX(0),IntToStrX(0),IntToStrX(0),new Buffer([135,80,3,0,0,0,176,81,5,32,0])]),true);break;case 81:if(B.debug){console.log("SCSI READ_DISC_INFO",K)}B.SendCommandEndResponse(0,5,K,32,0);return -1;case 85:if(B.debug){console.log("SCSI ERROR: MODE_SELECT_10",K)}B.SendCommandEndResponse(1,5,K,32,0);return -1;case 90:if(B.debug){console.log("SCSI: MODE_SENSE_10",K,J[2]&63)}var I=ReadShort(J,7);var V=null;if(I==0){B.SendDataToHost(K,true,Buffer.concat([IntToStr(60),IntToStr(8)]),M&1);return -1}var W=0;if(K==160){if(B.floppy!=null){W=(B.floppy.size>>9)}}else{if(B.cdrom!=null){W=(B.cdrom.size>>11)}}switch(J[2]&63){case 1:if(K==160){V=(W<=2880)?y:A}else{V=w}break;case 5:if(K==160){V=(W<=2880)?x:z}break;case 63:if(K==160){V=(W<=2880)?r:s}else{V=q}break;case 26:if(K==176){V=t}break;case 29:if(K==176){V=u}break;case 42:if(K==176){V=v}break}if(V==null){B.SendCommandEndResponse(0,5,K,32,0)}else{B.SendDataToHost(K,true,V,M&1)}break;case 81:B.SendDataToHost(K,true,C,M&1);break;case 172:B.SendDataToHost(K,true,D,M&1);break;default:if(B.debug){console.log("IDER: Unknown SCSI command",J[0])}B.SendCommandEndResponse(0,5,K,32,0);return -1}return 0}function E(G,I,J,H){var K=null;var L=0;if(G==160){K=B.floppy;if(B.floppy!=null){L=(B.floppy.size>>9)}}if(G==176){K=B.cdrom;if(B.cdrom!=null){L=(B.cdrom.size>>11)}}if((J<0)||(I+J>L)){B.SendCommandEndResponse(1,5,G,33,0);return 0}if(J==0){B.SendCommandEndResponse(1,0,G,0,0);return 0}if(K!=null){if(B.sectorStats){B.sectorStats(1,(G==160)?0:1,L,I,J)}if(G==160){I<<=9;J<<=9}else{I<<=11;J<<=11}if(d!==null){e.push({media:K,dev:G,lba:I,len:J,fr:H})}else{d=K;a=G;b=I;c=J;F(H)}}}var e=[];var f=false;var d=null;var a;var b;var c;function F(G){var I=c,H=b;if(c>B.iderinfo.readbfr){I=B.iderinfo.readbfr}c-=I;b+=I;var K=Buffer.alloc(I);fs.readSync(d.file,K,0,I,H);B.SendDataToHost(a,(c==0),K,G&1);if((c>0)&&(f==false)){F(G)}else{d=null;if(f){B.SendCommand(71);e=[];f=false}else{if(e.length>0){var J=e.shift();d=J.media;a=J.dev;b=J.lba;c=J.len;F(J.fr)}}}}return B};function ShortToStr(a){return new Buffer([(a>>8)&255,a&255])}function ShortToStrX(a){return new Buffer([a&255,(a>>8)&255])}function IntToStr(a){return new Buffer([(a>>24)&255,(a>>16)&255,(a>>8)&255,a&255])}function IntToStrX(a){return new Buffer([a&255,(a>>8)&255,(a>>16)&255,(a>>24)&255])}function ReadShort(b,a){return(b[a]<<8)+b[a+1]}function ReadShortX(b,a){return(b[a+1]<<8)+b[a]}function ReadInt(b,a){return(b[a]*16777216)+(b[a+1]<<16)+(b[a+2]<<8)+b[a+3]}function ReadSInt(b,a){return(b[a]<<24)+(b[a+1]<<16)+(b[a+2]<<8)+b[a+3]}function ReadIntX(b,a){return(b[a+3]*16777216)+(b[a+2]<<16)+(b[a+1]<<8)+b[a]};